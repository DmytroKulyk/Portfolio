// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$bg-welcome-name: 'bg_welcome';
$bg-welcome-x: 2214px;
$bg-welcome-y: 0px;
$bg-welcome-offset-x: -2214px;
$bg-welcome-offset-y: 0px;
$bg-welcome-width: 2250px;
$bg-welcome-height: 1125px;
$bg-welcome-total-width: 4464px;
$bg-welcome-total-height: 3601px;
$bg-welcome-image: 'sprite.png';
$bg-welcome: (2214px, 0px, -2214px, 0px, 2250px, 1125px, 4464px, 3601px, 'sprite.png', 'bg_welcome', );
$d-koval-img-name: 'd_koval_img';
$d-koval-img-x: 2291px;
$d-koval-img-y: 1125px;
$d-koval-img-offset-x: -2291px;
$d-koval-img-offset-y: -1125px;
$d-koval-img-width: 77px;
$d-koval-img-height: 77px;
$d-koval-img-total-width: 4464px;
$d-koval-img-total-height: 3601px;
$d-koval-img-image: 'sprite.png';
$d-koval-img: (2291px, 1125px, -2291px, -1125px, 77px, 77px, 4464px, 3601px, 'sprite.png', 'd_koval_img', );
$hero-img-name: 'heroImg';
$hero-img-x: 0px;
$hero-img-y: 2766px;
$hero-img-offset-x: 0px;
$hero-img-offset-y: -2766px;
$hero-img-width: 455px;
$hero-img-height: 835px;
$hero-img-total-width: 4464px;
$hero-img-total-height: 3601px;
$hero-img-image: 'sprite.png';
$hero-img: (0px, 2766px, 0px, -2766px, 455px, 835px, 4464px, 3601px, 'sprite.png', 'heroImg', );
$loft-name: 'loft';
$loft-x: 3000px;
$loft-y: 1493px;
$loft-offset-x: -3000px;
$loft-offset-y: -1493px;
$loft-width: 774px;
$loft-height: 501px;
$loft-total-width: 4464px;
$loft-total-height: 3601px;
$loft-image: 'sprite.png';
$loft: (3000px, 1493px, -3000px, -1493px, 774px, 501px, 4464px, 3601px, 'sprite.png', 'loft', );
$loft2-name: 'loft2';
$loft2-x: 0px;
$loft2-y: 0px;
$loft2-offset-x: 0px;
$loft2-offset-y: 0px;
$loft2-width: 2214px;
$loft2-height: 1493px;
$loft2-total-width: 4464px;
$loft2-total-height: 3601px;
$loft2-image: 'sprite.png';
$loft2: (0px, 0px, 0px, 0px, 2214px, 1493px, 4464px, 3601px, 'sprite.png', 'loft2', );
$map-name: 'map';
$map-x: 1800px;
$map-y: 1493px;
$map-offset-x: -1800px;
$map-offset-y: -1493px;
$map-width: 1200px;
$map-height: 977px;
$map-total-width: 4464px;
$map-total-height: 3601px;
$map-image: 'sprite.png';
$map: (1800px, 1493px, -1800px, -1493px, 1200px, 977px, 4464px, 3601px, 'sprite.png', 'map', );
$projects-bg-name: 'projects_bg';
$projects-bg-x: 0px;
$projects-bg-y: 1493px;
$projects-bg-offset-x: 0px;
$projects-bg-offset-y: -1493px;
$projects-bg-width: 1800px;
$projects-bg-height: 1273px;
$projects-bg-total-width: 4464px;
$projects-bg-total-height: 3601px;
$projects-bg-image: 'sprite.png';
$projects-bg: (0px, 1493px, 0px, -1493px, 1800px, 1273px, 4464px, 3601px, 'sprite.png', 'projects_bg', );
$v-sabia-img-name: 'v_sabia_img';
$v-sabia-img-x: 2214px;
$v-sabia-img-y: 1125px;
$v-sabia-img-offset-x: -2214px;
$v-sabia-img-offset-y: -1125px;
$v-sabia-img-width: 77px;
$v-sabia-img-height: 78px;
$v-sabia-img-total-width: 4464px;
$v-sabia-img-total-height: 3601px;
$v-sabia-img-image: 'sprite.png';
$v-sabia-img: (2214px, 1125px, -2214px, -1125px, 77px, 78px, 4464px, 3601px, 'sprite.png', 'v_sabia_img', );
$spritesheet-width: 4464px;
$spritesheet-height: 3601px;
$spritesheet-image: 'sprite.png';
$spritesheet-sprites: ($bg-welcome, $d-koval-img, $hero-img, $loft, $loft2, $map, $projects-bg, $v-sabia-img, );
$spritesheet: (4464px, 3601px, 'sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
